/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 phantoms.glb --transform 
Files: phantoms.glb [6.41MB] > phantoms-transformed.glb [192.39KB] (97%)
*/

import React, { useLayoutEffect, useRef } from 'react'
import { useGLTF, useScroll } from '@react-three/drei'
import gsap from 'gsap'
import { useFrame } from '@react-three/fiber'
import * as THREE from 'three';


export function Phantoms(props) {
  const { nodes, materials } = useGLTF('./models/robot/phantoms-transformed.glb')
  const robot = useRef()
  const scroll = useScroll();
  const tl = useRef()

  // Cargar la textura de metal con THREE.TextureLoader
  const metalTexture = new THREE.TextureLoader().load('path-to-metalTexture.jpg'); // Reemplaza 'path-to-metalTexture.jpg' con la ruta real


  useFrame((state, delta)=>{
    tl.current.seek(scroll.offset * tl.current.duration())
  })

  useLayoutEffect(()=>{
    tl.current = gsap.timeline({defaults: {duration: 2, ease: 'power1.inOut'}})

    tl.current
    .to(robot.current.rotation, {y: -1}, 2)
    .to(robot.current.position, {x: 1}, 2)

    .to(robot.current.rotation, {y: 1}, 6)   
    .to(robot.current.position, {x: -1}, 6)

    .to(robot.current.rotation, {y: 0}, 11)
    .to(robot.current.rotation, {x: 1}, 11)
    .to(robot.current.position, {x: 0}, 11)

    .to(robot.current.rotation, {y: 0}, 13)
    .to(robot.current.rotation, {x: -1}, 13)    
    .to(robot.current.position, {x: 0}, 13)

    .to(robot.current.rotation, {y: 0}, 16)   
    .to(robot.current.rotation, {x: 0}, 16) 
    .to(robot.current.position, {x: 0}, 16)    

    .to(robot.current.rotation, {y: 0}, 20)   
    .to(robot.current.rotation, {x: 0}, 20) 
    .to(robot.current.position, {x: 0}, 20) 


  },[])



  return (
    <group {...props} dispose={null} ref={robot}>
      <mesh geometry={nodes.Cylindre005.geometry} material={nodes.Cylindre005.material} position={[-0.017, 2.754, -0.066]} rotation={[-Math.PI, 0, 0]} scale={0.582} />
      <mesh geometry={nodes.Cube001.geometry}>
        <meshStandardMaterial
          map={metalTexture} // Aplica la textura de metal
          metalness={2} // Establece la propiedad de metalness en 1 para un aspecto de metal puro
          roughness={0} // Ajusta la rugosidad segÃºn tu preferencia
          // Puedes agregar otras propiedades como envMap para reflecciones si lo deseas
        />
      </mesh>
    </group>
  )
}

useGLTF.preload('./models/robot/phantoms-transformed.glb')
